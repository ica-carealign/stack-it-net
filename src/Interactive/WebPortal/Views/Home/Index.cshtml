@using Ica.StackIt.Interactive.WebPortal.Extensions
@using Ica.StackIt.Interactive.WebPortal.Models
@model IEnumerable<Ica.StackIt.Interactive.WebPortal.Models.StackOverviewViewModel>
@{
	ViewBag.Title = "Index";
}

<div class="page-header">
	<a href="@Url.Action("Create")" class="btn btn-primary">
		<span class="glyphicon glyphicon-plus"></span>
		New Stack
	</a>
	<h1>Current Stacks</h1>
</div>
<div>
	<table class="table table-hover stack-list">
		<thead>
			<tr>
				<th></th>
				<th>Name</th>
				<th>Created</th>
				<th class="center">AWS Status</th>
				<th>Description</th>
				<th>Cost</th>
				<th>Notes</th>
				<th>Owner</th>
				<th>Scheduled</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (StackOverviewViewModel item in @Model.OrderByDescending(x => x.CreateTime))
			{
				<tr>
					<td>@{ Html.RenderPartial("StackPower", item.StackPowerViewModel); }</td>
					<td>
						<div>
							@Html.ActionLink(item.Name, "Index", "Instance", new {item.Id}, new {title = "View stack instances"})
							@{Html.RenderPartial("PowerLEDs", item.StackInstanceViewModel);}
						</div>
					</td>
					<td>@item.CreateTime.ToString("ddd MMM d hh:MM:ss yyyy")</td>
					<td>@Html.RenderStatusIcon(item.Status, item.Id)</td>
					<td>@item.Description</td>
					<td>@item.TotalCost.ToString("C")</td>
					<td><span class="glyphicon glyphicon-paperclip center-block text-center pointer" 
						      data-username="@item.OwnerUserName"
						      data-stack-id="@item.Id"
						      data-profile-id="@item.OwnerProfileId">
						</span>
						<div class="modal fade">
							<div class="modal-dialog">
								<div class="modal-content">
									<div class="modal-header">
										<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
										<h4>Notes for stack @item.Name</h4>
									</div>
									<div class="modal-body">
										<div class="modal-error"><p class="text-danger"></p></div>
										<div class ="modal-success"><p class="text-success"></p></div>
										@Html.TextAreaFor(x => item.Notes, new {@class="form-control", rows=6, cols=85})
									</div>
									<div class="modal-footer">
										<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
										<button type="button" class="btn btn-primary save-note-changes">Save Changes</button>
									</div>
								</div>
							</div>
						</div>
					</td>
					<td>@item.OwnerUserName</td>
					<td>
						@Html.CheckBoxFor(x => item.ScheduleEnabled, new{disabled = "disabled"})
					</td>
					<td>
						<a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-xs">
							<span class="glyphicon glyphicon-trash"></span>
							Delete
						</a>
					</td>
				</tr>
			}
		</tbody>
		<tfoot></tfoot>
	</table>
</div>

@section scripts {
	<script>
		$(document).ready(function() {
			$(".glyphicon-paperclip").click(function() {
				var stackId = $(this).data("stack-id");
				var username = $(this).data("username");
				var profileId = $(this).data("profile-id");
				var modal = $(this).next();
				var textAreaSelector = modal.find("textarea");

				$(".save-note-changes").click(function() {

					var noteObj = {
						StackId : stackId,
						OwnerUserName: username,
						OwnerProfileId: profileId,
						Notes: textAreaSelector.val()
					};

					var updateNotesEndpoint = "@Url.Action("UpdateNotes", "Home")";
					$.post(updateNotesEndpoint, noteObj).done(function(data) {
						if (data.Error) {
							modal.find(".modal-error p").text("Error: " + data.Error);
						} else {
							modal.find(".modal-success p").text("Notes were saved successfully.");
						}
					});
				});

				modal.modal();
			});
		});
	</script>
}